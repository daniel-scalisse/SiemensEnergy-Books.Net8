// <auto-generated />
using System;
using Books_Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Books_Data.Migrations
{
    [DbContext(typeof(BooksDbContext))]
    [Migration("20250819050902_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Books_Business.Modules.Authors.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("InclusionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Authors", (string)null);
                });

            modelBuilder.Entity("Books_Business.Modules.Books.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Barcode")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<bool>("Dedication")
                        .HasColumnType("bit");

                    b.Property<short>("Edition")
                        .HasColumnType("smallint");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("InclusionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observation")
                        .HasColumnType("varchar(200)");

                    b.Property<short>("PageQuantity")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubTitle")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("Value")
                        .HasColumnType("numeric(9,2)");

                    b.Property<short>("Year")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("Barcode")
                        .IsUnique()
                        .HasDatabaseName("IX_BarCode");

                    b.HasIndex("GenderId");

                    b.HasIndex("ISBN")
                        .IsUnique()
                        .HasDatabaseName("IX_ISBN");

                    b.ToTable("Books", (string)null);
                });

            modelBuilder.Entity("Books_Business.Modules.Books.BookImage", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<byte[]>("Image")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("IX_BookId");

                    b.ToTable("BookImages", (string)null);
                });

            modelBuilder.Entity("Books_Business.Modules.Genders.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("InclusionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Genders", (string)null);
                });

            modelBuilder.Entity("Books_Business.Modules.Books.Book", b =>
                {
                    b.HasOne("Books_Business.Modules.Authors.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .IsRequired();

                    b.HasOne("Books_Business.Modules.Genders.Gender", "Gender")
                        .WithMany("Books")
                        .HasForeignKey("GenderId")
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Gender");
                });

            modelBuilder.Entity("Books_Business.Modules.Books.BookImage", b =>
                {
                    b.HasOne("Books_Business.Modules.Books.Book", "Book")
                        .WithOne("BookImage")
                        .HasForeignKey("Books_Business.Modules.Books.BookImage", "Id")
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("Books_Business.Modules.Authors.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("Books_Business.Modules.Books.Book", b =>
                {
                    b.Navigation("BookImage");
                });

            modelBuilder.Entity("Books_Business.Modules.Genders.Gender", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
